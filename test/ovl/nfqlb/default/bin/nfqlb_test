#! /bin/sh
##
## nfqlb_test --
##
##   Test script for nfqlb executed in xcluster.
##
## Commands;
##

prg=$(basename $0)
dir=$(dirname $0); dir=$(readlink -f $dir)
me=$dir/$prg
tmp=/tmp/${prg}_$$
test -n "$DOMAIN" || DOMAIN=xcluster

die() {
	echo "ERROR: $*" >&2
	rm -rf $tmp
	exit 1
}
help() {
	grep '^##' $0 | cut -c3-
	rm -rf $tmp
	exit 0
}
test -n "$1" || help
echo "$1" | grep -qi "^help\|-h" && help

log() {
	echo "$prg: $*" >&2
}
dbg() {
	test -n "$__verbose" && echo "$prg: $*" >&2
}


cmd_tcase_nfqueue_activate_all() {
	tcase "nfqueue activate all"
	local n
	for n in $(seq 1 $__nvm); do
		nfqlb activate $((n + 100))
	done
	nfqlb show --shm=nfqlbLb > /dev/null 2&>1 || return 0
	test -n "$__nrouters" || __nrouters=1
	for n in $(seq 1 $__nrouters); do
		nfqlb activate --shm=nfqlbLb $((n + 200))
	done
}

cmd_tcase_mconnect() {
	test -n "$__vip" || __vip="[1000::]:5001"
	tcase "Mconnect to; $__vip"
	local srccidr=$PREFIX:$XADDR/112
	echo $__vip | grep -Fq '[' || srccidr=$XADDR/16
	do_mconnect $__vip -srccidr $srccidr
}

cmd_tcase_mconnect_udp() {
	test -n "$__vip" || __vip="[1000::]:5001"
	tcase "Mconnect with UDP to; $__vip"
	local srccidr=$PREFIX:$XADDR/112
	echo $__vip | grep -Fq '[' || srccidr=$XADDR/16
	do_mconnect $__vip -srccidr $srccidr -udp
}
cmd_tcase_ping() {
	test -n "$__vip" || __vip="1000::"
	tcase "Ping to; $__vip"
	local i
	for i in $(seq 1 40); do
		ping -c1 -W1 $__vip || tdie ping
	done
}

cmd_tcase_fragrev() {
	which tap-scrambler_test > /dev/null || die "No tap-scrambler_test"
	tap-scrambler_test tcase_tap
	tap-scrambler fragrev --tap=tap2 > /var/log/tap-scrambler.log 2>&1 &
}

cmd_tcase_udp() {
	test -n "$__vip" || __vip="[1000::]:6003"
	tcase "Test UDP traffic to; $__vip"
	test -n "$__copt" || __copt="-monitor -psize 2048 -rate 1000 -nconn 40 -timeout 20s"
	test -n "$LBOPT" && tlog "LBOPT=[$LBOPT]"
	tlog "ctraffic opts; $__copt"
	local srccidr=$PREFIX:$XADDR/112
	echo $__vip | grep -Fq '[' || srccidr=$XADDR/16
	mkdir -p $tmp
	ctraffic -udp -address $__vip -srccidr $srccidr $__copt > $tmp/out || tdie ctraffic
	test "$__verbose" = "yes" && jq < $tmp/out >&2
	# We accept 1% packet loss
	local sent rec drop loss
	sent=$(jq -r .Sent < $tmp/out)
	rec=$(jq -r .Received < $tmp/out)
	drop=$(jq -r .Dropped < $tmp/out)
	loss=$(( (sent + drop - rec) * 100 / (sent + drop) ))
	test $loss -le 1 || tdie "Lost traffic $loss%"
	tlog "Lost traffic $loss%"
}

cmd_tcase_nfqlb_stats() {
	tcase "nfqlb fragment stats"
	nfqlb stats >&2
	echo "  Q       port inq cp   rng  Qdrop  Udrop      Seq" >&2
	cat /proc/net/netfilter/nfnetlink_queue | format_stats >&2
}
format_stats() {
	local line s
	while read line; do
		s=$(echo $line | tr -s ' ' :)
		# Q port(pid) inQ cpmode range Qdroped usrDropped lastSeq 1
		local Q=$(echo $s | cut -d: -f1)
		local port=$(echo $s | cut -d: -f2)
		local inQ=$(echo $s | cut -d: -f3)
		local cp=$(echo $s | cut -d: -f4)
		local rng=$(echo $s | cut -d: -f5)
		local Qdrop=$(echo $s | cut -d: -f6)
		local Udrop=$(echo $s | cut -d: -f7)
		local seq=$(echo $s | cut -d: -f8)
		printf "%3u %10u %3u  %u %5u %6u %6u %8u\n"\
			$Q $port $inQ $cp $rng $Qdrop $Udrop $seq
	done
}

cmd_tcase_hw_server() {
	test -n "$__vip" || __vip=10.0.0.0/32
	echo 0 > /proc/sys/net/ipv6/conf/eth1/accept_dad
	local gw
	if echo $__vip | grep -q :; then
		#gw=$PREFIX:10.10.0.1
		gw=$PREFIX:192.168.1.201
		ip -6 addr add $PREFIX:10.10.0.0/127 dev eth1
	else
		gw=192.168.1.201
		ip addr add 10.10.0.0/31 dev eth1
	fi
	tcase "HW-setup; Start server, vip=$__vip, gw=$gw"
	tex ping -c1 -W1 -q $gw
	export __sudo=env
	nfqlb_performance.sh start_server --gw=$gw --vip=$__vip || tdie
}
cmd_tcase_hw_netns() {
	tcase "HW-setup; Setup netns"
	ethtool -K eth1 gro off gso off tso off
	echo 0 > /proc/sys/net/ipv6/conf/eth1/accept_dad
	export __sudo=env
	nfqlb_performance.sh test_netns --iface=eth1
}

cmd_tcase_http() {
	local url="http://10.0.0.0"
	if test -n "$1"; then
		url=$1
		shift
	fi
	tcase "curl $url"
	curl $@ $url > /dev/null || tdie "curl $@ $url"
}

cmd_tcase_vip_route() {
	tcase "Setup VIP route to [$1]"
	ip ro add 10.0.0.0/24 via $1
	ip -6 ro add 1000::/120 via $PREFIX:$1
}

cmd_tcase_default_route() {
	tcase "Setup default route to [$1]"
	local ip=ip
	echo $1 | grep -q : && ip="ip -6"
	$ip route replace default via $1 || tdie
}



. /etc/profile
. /usr/lib/xctest
indent='  '

test -n "$PREFIX" || PREFIX=1000::1
test -n "$XADDR" || XADDR=20.0.0.0


# Get the command
cmd=$1
shift
grep -q "^cmd_$cmd()" $0 || die "Invalid command [$cmd]"

while echo "$1" | grep -q '^--'; do
	if echo $1 | grep -q =; then
		o=$(echo "$1" | cut -d= -f1 | sed -e 's,-,_,g')
		v=$(echo "$1" | cut -d= -f2-)
		eval "$o=\"$v\""
	else
		o=$(echo "$1" | sed -e 's,-,_,g')
		eval "$o=yes"
	fi
	shift
done
unset o v
long_opts=`set | grep '^__' | cut -d= -f1`

# Execute command
trap "die Interrupted" INT TERM
cmd_$cmd "$@"
status=$?
rm -rf $tmp
exit $status
